//
//  ErrorTranslator.swift
//  Crownstone
//
//  Created by Alex de Mulder on 21/11/2017.
//  Copyright Â© 2017 Crownstone. All rights reserved.
//

import Foundation
import BluenetLib

func getBluenetErrorString(_ err: BluenetError) -> String {
  switch err {
  case .DISCONNECTED:
    return "DISCONNECTED"
  case .CONNECTION_CANCELLED:
    return "CONNECTION_CANCELLED"
  case .CONNECTION_FAILED:
    return "CONNECTION_FAILED"
  case .NOT_CONNECTED:
    return "NOT_CONNECTED"
  case .NO_SERVICES:
    return "NO_SERVICES"
  case .NO_CHARACTERISTICS:
    return "NO_CHARACTERISTICS"
  case .SERVICE_DOES_NOT_EXIST:
    return "SERVICE_DOES_NOT_EXIST"
  case .CHARACTERISTIC_DOES_NOT_EXIST:
    return "CHARACTERISTIC_DOES_NOT_EXIST"
  case .WRONG_TYPE_OF_PROMISE:
    return "WRONG_TYPE_OF_PROMISE"
  case .INVALID_UUID:
    return "INVALID_UUID"
  case .NOT_INITIALIZED:
    return "NOT_INITIALIZED"
  case .CANNOT_SET_TIMEOUT_WITH_THIS_TYPE_OF_PROMISE:
    return "CANNOT_SET_TIMEOUT_WITH_THIS_TYPE_OF_PROMISE"
  case .TIMEOUT:
    return "TIMEOUT"
  case .DISCONNECT_TIMEOUT:
    return "DISCONNECT_TIMEOUT"
  case .CANCEL_PENDING_CONNECTION_TIMEOUT:
    return "CANCEL_PENDING_CONNECTION_TIMEOUT"
  case .CONNECT_TIMEOUT:
    return "CONNECT_TIMEOUT"
  case .GET_SERVICES_TIMEOUT:
    return "GET_SERVICES_TIMEOUT"
  case .GET_CHARACTERISTICS_TIMEOUT:
    return "GET_CHARACTERISTICS_TIMEOUT"
  case .READ_CHARACTERISTIC_TIMEOUT:
    return "READ_CHARACTERISTIC_TIMEOUT"
  case .WRITE_CHARACTERISTIC_TIMEOUT:
    return "WRITE_CHARACTERISTIC_TIMEOUT"
  case .ENABLE_NOTIFICATIONS_TIMEOUT:
    return "ENABLE_NOTIFICATIONS_TIMEOUT"
  case .DISABLE_NOTIFICATIONS_TIMEOUT:
    return "DISABLE_NOTIFICATIONS_TIMEOUT"
  case .CANNOT_WRITE_AND_VERIFY:
    return "CANNOT_WRITE_AND_VERIFY"
  case .CAN_NOT_CONNECT_TO_UUID:
    return "CAN_NOT_CONNECT_TO_UUID"
  case .COULD_NOT_FACTORY_RESET:
    return "COULD_NOT_FACTORY_RESET"
  case .INVALID_SESSION_DATA:
    return "INVALID_SESSION_DATA"
  case .NO_SESSION_NONCE_SET:
    return "NO_SESSION_NONCE_SET"
  case .COULD_NOT_VALIDATE_SESSION_NONCE:
    return "COULD_NOT_VALIDATE_SESSION_NONCE"
  case .INVALID_SIZE_FOR_ENCRYPTED_PAYLOAD:
    return "INVALID_SIZE_FOR_ENCRYPTED_PAYLOAD"
  case .INVALID_SIZE_FOR_SESSION_NONCE_PACKET:
    return "INVALID_SIZE_FOR_SESSION_NONCE_PACKET"
  case .INVALID_PACKAGE_FOR_ENCRYPTION_TOO_SHORT:
    return "INVALID_PACKAGE_FOR_ENCRYPTION_TOO_SHORT"
  case .INVALID_KEY_FOR_ENCRYPTION:
    return "INVALID_KEY_FOR_ENCRYPTION"
  case .DO_NOT_HAVE_ENCRYPTION_KEY:
    return "DO_NOT_HAVE_ENCRYPTION_KEY"
  case .COULD_NOT_ENCRYPT:
    return "COULD_NOT_ENCRYPT"
  case .COULD_NOT_ENCRYPT_KEYS_NOT_SET:
    return "COULD_NOT_ENCRYPT_KEYS_NOT_SET"
  case .COULD_NOT_DECRYPT_KEYS_NOT_SET:
    return "COULD_NOT_DECRYPT_KEYS_NOT_SET"
  case .COULD_NOT_DECRYPT:
    return "COULD_NOT_DECRYPT"
  case .CAN_NOT_GET_PAYLOAD:
    return "CAN_NOT_GET_PAYLOAD"
  case .USERLEVEL_IN_READ_PACKET_INVALID:
    return "USERLEVEL_IN_READ_PACKET_INVALID"
  case .READ_SESSION_NONCE_ZERO_MAYBE_ENCRYPTION_DISABLED:
    return "READ_SESSION_NONCE_ZERO_MAYBE_ENCRYPTION_DISABLED"
  case .NOT_IN_RECOVERY_MODE:
    return "NOT_IN_RECOVERY_MODE"
  case .CANNOT_READ_FACTORY_RESET_CHARACTERISTIC:
    return "CANNOT_READ_FACTORY_RESET_CHARACTERISTIC"
  case .RECOVER_MODE_DISABLED:
    return "RECOVER_MODE_DISABLED"
  case .INVALID_TX_POWER_VALUE:
    return "INVALID_TX_POWER_VALUE"
  case .NO_KEEPALIVE_STATE_ITEMS:
    return "NO_KEEPALIVE_STATE_ITEMS"
  case .NO_SWITCH_STATE_ITEMS:
    return "NO_SWITCH_STATE_ITEMS"
  case .DFU_OVERRULED:
    return "DFU_OVERRULED"
  case .DFU_ABORTED:
    return "DFU_ABORTED"
  case .DFU_ERROR:
    return "DFU_ERROR"
  case .COULD_NOT_FIND_PERIPHERAL:
    return "COULD_NOT_FIND_PERIPHERAL"
  case .PACKETS_DO_NOT_MATCH:
    return "PACKETS_DO_NOT_MATCH"
  case .NOT_IN_DFU_MODE:
    return "NOT_IN_DFU_MODE"
  case .REPLACED_WITH_OTHER_PROMISE:
    return "REPLACED_WITH_OTHER_PROMISE"
  case .INCORRECT_RESPONSE_LENGTH:
    return "INCORRECT_RESPONSE_LENGTH"
  case .UNKNOWN_TYPE:
    return "UNKNOWN_TYPE"
  case .INCORRECT_SCHEDULE_ENTRY_INDEX:
    return "INCORRECT_SCHEDULE_ENTRY_INDEX"
  case .INCORRECT_DATA_COUNT_FOR_ALL_TIMERS:
    return "INCORRECT_DATA_COUNT_FOR_ALL_TIMERS"
  case .NO_SCHEDULE_ENTRIES_AVAILABLE:
    return "NO_SCHEDULE_ENTRIES_AVAILABLE"
  case .NO_TIMER_FOUND:
    return "NO_TIMER_FOUND"
  case .ERROR_DISCONNECT_TIMEOUT:
    return "ERROR_DISCONNECT_TIMEOUT"
  case .AWAIT_DISCONNECT_TIMEOUT:
    return "AWAIT_DISCONNECT_TIMEOUT"
  case .NOTIFICATION_STREAM_TIMEOUT:
    return "NOTIFICATION_STREAM_TIMEOUT"
  case .PROCESS_ABORTED_WITH_ERROR:
    return "PROCESS_ABORTED_WITH_ERROR"
  case .UNKNOWN_PROCESS_TYPE:
    return "UNKNOWN_PROCESS_TYPE"
  case .INVALID_INPUT:
    return "INVALID_INPUT"
  case .INVALID_SESSION_REFERENCE_ID:
    return "INVALID_SESSION_REFERENCE_ID"
  case .SETUP_FAILED:
    return "SETUP_FAILED"
  case .INVALID_BROADCAST_ACCESS_LEVEL:
    return "INVALID_BROADCAST_ACCESS_LEVEL"
  case .INVALID_BROADCAST_LOCATION_ID:
    return "INVALID_BROADCAST_LOCATION_ID"
  case .INVALID_BROADCAST_PROFILE_INDEX:
    return "INVALID_BROADCAST_PROFILE_INDEX"
  case .INVALID_BROADCAST_PAYLOAD_SIZE:
    return "INVALID_BROADCAST_PAYLOAD_SIZE"
  case .BROADCAST_ERROR:
    return "BROADCAST_ERROR"
  case .BROADCAST_ABORTED:
    return "BROADCAST_ABORTED"
  case .BLE_RESET:
    return "BLE_RESET"
}
}
